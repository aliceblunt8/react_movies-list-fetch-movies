{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","movieTitle","addMovieTitle","loadedMovie","createMovie","error","setError","findMovie","a","fetch","then","promise","json","Response","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","target","input","value","htmlFor","type","name","id","placeholder","classNames","onChange","onClick","App","data","updateMovies","movieFromServer","find","ReactDOM","render","document","getElementById"],"mappings":"mxEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,sDCH3BG,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,OAENF,mBAASP,EAAO,IAFV,mBAElCU,EAFkC,KAErBC,EAFqB,OAGfJ,oBAAS,GAHM,mBAGlCK,EAHkC,KAG3BC,EAH2B,KAKnCC,EAAS,uCAAG,4BAAAC,EAAA,sECXMxB,EDYSiB,ECZAQ,MAAM,GAAD,OAFvB,8CAEuB,OAAezB,IACpD0B,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UDUP,UAGO,WAFjBjB,EADU,QAGNkB,SAHM,uBAIdP,GAAS,GAJK,0BAShBA,GAAS,GAETF,EAAY,CACVpB,MAAOW,EAAMmB,MACb7B,YAAaU,EAAMoB,KACnB7B,OAAQS,EAAMqB,OACd7B,QAAQ,8BAAD,OAAgCQ,EAAMsB,OAAtC,KACPpB,OAAQF,EAAMsB,SAhBA,iCCXM,IAAAjC,IDWN,OAAH,qDA2Bf,OACE,oCACE,0BAAMI,UAAU,aAAa8B,SATd,SAACC,GAClBA,EAAMC,iBACYD,EAAME,OAAOC,MAErBC,MAAQ,KAMd,yBAAKnC,UAAU,SACb,2BAAOA,UAAU,QAAQoC,QAAQ,eAAjC,eAIA,yBAAKpC,UAAU,WACb,2BACEqC,KAAK,OACLC,KAAK,QACLC,GAAG,cACHC,YAAY,0BACZxC,UAAWyC,IAAW,QAAS,CAAE,YAAaxB,IAC9CyB,SAAU,SAAAX,GAAK,OAAIjB,EAAciB,EAAME,OAAOE,WAIjDlB,GACC,uBAAGjB,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEqC,KAAK,SACLrC,UAAU,kBACV2C,QAASxB,GAHX,iBASF,yBAAKnB,UAAU,WACb,4BACEqC,KAAK,SACLrC,UAAU,oBACV2C,QAAS,kBAAMhC,EAASI,KAH1B,sBAWN,yBAAKf,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAce,MErFV6B,EAAM,WAAO,IAAD,EACQhC,mBAASiC,GADjB,mBAChBxC,EADgB,KACRyC,EADQ,KAkBvB,OACE,yBAAK9C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWW,SArBE,SAACoC,GACA1C,EAAO2C,MACvB,SAAAzC,GAAK,OAAIA,EAAME,SAAWsC,EAAgBtC,WAO5CqC,EAAa,GAAD,mBACPzC,GADO,CAEV0C,WCfNE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1f6a5a51.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { fetchMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport movies from '../../api/movies.json';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [movieTitle, addMovieTitle] = useState('');\n  const [loadedMovie, createMovie] = useState(movies[0]);\n  const [error, setError] = useState(false);\n\n  const findMovie = async() => {\n    const movie = await fetchMovie(movieTitle);\n\n    if (movie.Response === 'False') {\n      setError(true);\n\n      return;\n    }\n\n    setError(false);\n\n    createMovie({\n      title: movie.Title,\n      description: movie.Plot,\n      imgUrl: movie.Poster,\n      imdbUrl: `https://www.imdb.com/title/${movie.imdbID}/`,\n      imdbId: movie.imdbID,\n    });\n  };\n\n  const clearInput = (event) => {\n    event.preventDefault();\n    const formInput = event.target.input;\n\n    formInput.value = '';\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={clearInput}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              name=\"input\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n              onChange={event => addMovieTitle(event.target.value)}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n              onClick={() => addMovie(loadedMovie)}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard {...loadedMovie} />\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","const IMDB_API = 'http://www.omdbapi.com/?apikey=745602f5&t=';\n\nexport const fetchMovie = title => fetch(`${IMDB_API}${title}`)\n  .then(promise => promise.json());\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, updateMovies] = useState(data);\n\n  const checkMovie = (movieFromServer) => {\n    const sameMovie = movies.find(\n      movie => movie.imdbId === movieFromServer.imdbId,\n    );\n\n    if (sameMovie) {\n      return;\n    }\n\n    updateMovies([\n      ...movies,\n      movieFromServer,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={checkMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}